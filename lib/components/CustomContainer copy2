import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:powertani/Home/main.dart';
import 'package:powertani/Profile/main.dart';

class CustomContainer extends StatefulWidget {
  final String? username;
  final Map<String, dynamic> user;

  CustomContainer({Key? key, this.username = '', required this.user})
      : super(key: key);

  @override
  _CustomContainerState createState() => _CustomContainerState();
}

class _CustomContainerState extends State<CustomContainer> {
  final double navigationHeight = 70;
  late PageController _pageController;
  int _currentIndex = 0;

  final List<Widget> _pages = [];

  @override
  void initState() {
    super.initState();
    _pageController = PageController();

    _pages.addAll([
      HomePage(user: widget.user),
      const Center(child: Text("Schedule Page")),
      ProfilePage(user: widget.user),
    ]);
  }

  @override
  void dispose() {
    _pageController.dispose();
    super.dispose();
  }

  void _onNavigationItemTapped(int index) {
    setState(() {
      _currentIndex = index;
    });
    _pageController.animateToPage(
      index,
      duration: const Duration(milliseconds: 300),
      curve: Curves.easeInOut,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: PageView(
        controller: _pageController,
        physics:
            const NeverScrollableScrollPhysics(), // Disable swipe gestures if you want manual navigation only
        children: _pages,
      ),
      bottomNavigationBar: Container(
        height: navigationHeight,
        width: MediaQuery.of(context).size.width,
        padding: const EdgeInsets.symmetric(horizontal: 30),
        decoration: BoxDecoration(
          color: Colors.white,
          boxShadow: [
            BoxShadow(
              color: Colors.black.withOpacity(0.2),
              spreadRadius: 1,
              blurRadius: 8,
              offset: const Offset(0, -2),
            ),
          ],
        ),
        child: NavigationBar(
          currentIndex: _currentIndex,
          menuItems: [
            {'key': 0, 'icon': const Icon(Icons.home), 'text': 'Beranda'},
            {
              'key': 1,
              'icon': CircleAvatar(
                radius: 15,
                backgroundColor: Colors.transparent,
                child: Image.asset(
                  'assets/images/icons/spa.png',
                  width: 50,
                  height: 50,
                ),
              ),
              'text': 'Schedule',
            },
            {
              'key': 2,
              'icon': const Icon(Icons.account_circle_outlined),
              'text': 'Profil',
            },
          ],
          onItemSelected: _onNavigationItemTapped,
        ),
      ),
    );
  }
}

class NavigationBar extends StatelessWidget {
  final int currentIndex;
  final List<Map<String, dynamic>> menuItems;
  final Function(int) onItemSelected;

  const NavigationBar({
    Key? key,
    required this.currentIndex,
    required this.menuItems,
    required this.onItemSelected,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceAround,
      children: menuItems.map((menuItem) {
        return NavIcon(
          icon: menuItem['icon'],
          text: menuItem['text'],
          isSelected: menuItem['key'] == currentIndex,
          onPressed: () => onItemSelected(menuItem['key']),
        );
      }).toList(),
    );
  }
}

class NavIcon extends StatelessWidget {
  const NavIcon({
    Key? key,
    required this.icon,
    this.size = 30,
    this.text = '',
    required this.isSelected,
    required this.onPressed,
  }) : super(key: key);

  final Widget icon;
  final double size;
  final String text;
  final bool isSelected;
  final VoidCallback onPressed;

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        IconButton(
          onPressed: onPressed,
          icon: icon,
          color: isSelected ? Colors.blue : Colors.grey,
        ),
        Text(
          text,
          style: TextStyle(
            fontFamily: 'Montserrat',
            fontSize: 12,
            color: isSelected ? Colors.blue : Colors.grey,
          ),
        ),
      ],
    );
  }
}
